# Defines which Linux system user will own and run the Nginx server
# user  nobody;

# Referes to single threaded process, generally set to be equal to the number of CPUs or cores
worker_processes  1;

# Specifies the file where server logs
# error_log   logs/error.log;
# error_log   logs/error.log  notice;

# Nginx will write its master process ID (PID)
# pid         logs/nginx.pid;

events {
    # Worker_processes and worker_connections allows you to calculate maxclients value: max_clients = worker_processes * worker_connections
    worker_connections  1024;
}

http {
    # Anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block
    include       mime.types;
    default_type  application/octet-stream;
    # access_log  logs/access.log  main;

    # If serving locally stores static files, sendfile is essential to speed up the server but if using as reverse proxy one can deactivate it
    sendfile      on;

    # Works opposite to tcp_nodelay, instead of optimizing delays it optimizes the amount of data sent at once
    # tcp_nopush  on;

    # timeout during which a keep-alive client connection will stay open
    keepalive_timeout   65;

    # Tells the server to use on-the-fly gzip compression
    # gzip         on;
    limit_req_zone  $binary_remote_addr zone=default:10m  rate=5r/s;

    ssl_session_cache           shared:SSL:1m;
    ssl_session_timeout         5m;
    ssl_ciphers                 HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers   on;

    # Define Nginx upstream components to which route http requests
    # Server names and ports must match with the Nginx container links in docker-compose.yml
    upstream graphql  {
      server graphql:5433;
    }

    upstream app {
      server app:8080;
    }

    # Server for https
    server {
      listen       8080 ssl http2;
      listen       443 ssl http2;
      server_name  localhost;

      ssl_certificate      /etc/nginx/cert.pem;
      ssl_certificate_key  /etc/nginx/key.pem;

      # Required to avoid error message due to the hot reload in dev
      location /sockjs-node/ {
        if ($request_method = 'OPTIONS') {
          add_header "Access-Control-Allow-Origin" '*';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain; charset=utf-8';
          add_header 'Content-Length' 0;
          return 204;
        }
        if ($request_method = 'POST') {
          add_header "Access-Control-Allow-Origin" '*';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
          add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }
        if ($request_method = 'GET') {
          add_header "Access-Control-Allow-Origin" '*';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
          add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://app/sockjs-node;
      }

      # Location for ListOf GraphQL API
      location ~ ^/(graphql|graphiql|graphql\/stream) {
        limit_req zone=default burst=20;
        proxy_pass http://graphql;
        proxy_redirect   off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }

      # Location for ListOf Web App
      location / {
        limit_req zone=default burst=20;
        proxy_pass http://app;
        proxy_redirect   off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }
    }

    # Default server to redirect http requests to https
    server {
      listen 80 default_server;
      server_name localhost;
      listen [::]:80 default_server;

        #location ~ /.well-known {
            #root /var/www/letsencrypt;
        #}
        location / {
            return 301 https://$host$request_uri;
        }
    }
}
